# filepath: k8s/api-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bemind-api
  namespace: bemind
  labels:
    app: bemind-api
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bemind-api
  template:
    metadata:
      labels:
        app: bemind-api
        version: v1.0.0
    spec:
      serviceAccountName: bemind-indexer-sa
      
      # Pod Anti-Affinity - Required by Azure Policy
      # Ensures pods are distributed across different nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - bemind-api
                topologyKey: kubernetes.io/hostname
      
      containers:
        - name: api
          image: devbemindcontainerregistryse.azurecr.io/bemind-api:v1.0.0
          imagePullPolicy: Always
          
          ports:
            - name: http
              containerPort: 5002
              protocol: TCP
          
          env:
            # Azure OpenAI Configuration
            - name: AZURE_OPENAI_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: azure-openai-secret
                  key: AZURE_OPENAI_ENDPOINT
            - name: AZURE_OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: azure-openai-secret
                  key: AZURE_OPENAI_API_KEY
            - name: AZURE_OPENAI_API_VERSION
              valueFrom:
                secretKeyRef:
                  name: azure-openai-secret
                  key: AZURE_OPENAI_API_VERSION
            - name: AZURE_OPENAI_EMBEDDING_DEPLOYMENT
              valueFrom:
                secretKeyRef:
                  name: azure-openai-secret
                  key: AZURE_OPENAI_EMBEDDING_DEPLOYMENT
            - name: AZURE_OPENAI_GPT4_DEPLOYMENT
              valueFrom:
                secretKeyRef:
                  name: azure-openai-secret
                  key: AZURE_OPENAI_GPT4_DEPLOYMENT
            
            # Azure Cognitive Search Configuration
            - name: AZURE_SEARCH_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: azure-search-secret
                  key: AZURE_SEARCH_ENDPOINT
            - name: AZURE_SEARCH_KEY
              valueFrom:
                secretKeyRef:
                  name: azure-search-secret
                  key: AZURE_SEARCH_KEY
            - name: AZURE_SEARCH_API_VERSION
              valueFrom:
                secretKeyRef:
                  name: azure-search-secret
                  key: AZURE_SEARCH_API_VERSION
            
            # Azure Storage Configuration
            - name: AZURE_STORAGE_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  name: azure-storage-secret
                  key: AZURE_STORAGE_ACCOUNT_NAME
            - name: AZURE_STORAGE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: azure-storage-secret
                  key: AZURE_STORAGE_CONNECTION_STRING
            - name: AZURE_STORAGE_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: azure-storage-secret
                  key: AZURE_STORAGE_ENDPOINT
            
            # API Secrets
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: JWT_SECRET
            
            # Application Configuration
            - name: FLASK_ENV
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          
          livenessProbe:
            httpGet:
              path: /health
              port: 5002
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: 5002
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: bemind-api-service
  namespace: bemind
  labels:
    app: bemind-api
spec:
  type: ClusterIP
  selector:
    app: bemind-api
  ports:
    - name: http
      port: 5002
      targetPort: 5002
      protocol: TCP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bemind-api-hpa
  namespace: bemind
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bemind-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max