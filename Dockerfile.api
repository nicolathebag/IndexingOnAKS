# filepath: Dockerfile.api
# ================================================================
# BeMind API - Production Dockerfile
# Multi-stage build for optimized Flask application
# ================================================================

# Stage 1: Build dependencies
FROM python:3.11-slim AS builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install to a virtual environment
COPY requirements.txt .
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --no-cache-dir --upgrade pip setuptools wheel && \
    /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

# ================================================================
# Stage 2: Runtime image
FROM python:3.11-slim

LABEL maintainer="BeMind Team"
LABEL version="1.0"
LABEL description="BeMind Flask API for managing indexing jobs on AKS"

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Copy application code - entire project structure
COPY . /app/

# Create non-root user for security
RUN groupadd -r appuser && \
    useradd -r -g appuser -u 1000 -m -s /bin/bash appuser && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app

# Set environment variables
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    PORT=5002 \
    FLASK_APP=src.api.app:app \
    FLASK_ENV=production

USER appuser

# Expose port
EXPOSE 5002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5002/health || exit 1

# Run with gunicorn for Flask production
# Change working directory to /app and run gunicorn
CMD ["sh", "-c", "cd /app && gunicorn --bind 0.0.0.0:5002 --workers 2 --threads 4 --timeout 120 --access-logfile - --error-logfile - --log-level info --chdir /app src.api.app:app"]